<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Season</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/slate/bootstrap.min.css" integrity="sha384-8iuq0iaMHpnH2vSyvZMSIqQuUnQA7QM+f6srIdlgBrTSEyd//AWNMyEaSF2yPzNQ" crossorigin="anonymous">

  <style>
    .event {
      max-width: 30%;
      margin: auto;
    }

    .wrapper {
      display: flex;
      flex-direction: row;
      justify-content: center;
    }

    @media screen and (max-width: 650px) {
      .wrapper {
        flex-direction: column;
      }
    }
  </style>
</head>

<body class="text-center">

  <style>
    html,
    body {
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }

    #container {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    #footer {
      margin-top: auto;
    }
  </style>
  <div id="container">
    <div id="body">
      <h1>Edit the chosen Seson:</h1>

      <label for="year">Year:</label>
      <input type="number" id="year" name="year" value="<%= parseInt(season.year) %>">
      <br><br>
      <label for="season">Season Nr.:</label>
      <input type="number" id="season" name="season" value="<%= parseInt(season.seasonNr) %>">
      <br><br>

      <div class="wrapper">
        <div style="display: flex; justify-content: center; margin-right: 5%;">
          <div>
            <h3>Driver / Team / Color:</h3>
            <div id=drivers>
              <% //create a list of all drivers, that allows for all elements of a driver to be changed 
                for (let i=0; i < season.driverTeams.length; i++) { %>
              <div id="driverdiv<%= i %> ">
                <label for="driver">Driver <%= i+1 %>:</label>
                <input type="text" id="driver<%= i %>" name="driver<%= i %>" value="<%= season.driverTeams[i].driver %>">
                <input type="text" id="teamDriver<%= i %>" name="teamDriver<%= i %>" value="<%= season.driverTeams[i].team %>">
                <input type="color" id="colorTeamDriver<%= i %>" name="colorTeamDriver<%= i %>" value="<%= season.driverTeams[i].color %>">
                <br><br>
              </div>
              <% } %>
            </div>
            <button type="button" class="btn btn-secondary btn-sm" onclick="addNewDriver()" id="newDriver">+ Driver</button>
          </div>
          <br><br>
        </div>

        <div style="display: flex; justify-content: center;">
          <div>
            <h3>Events:</h3>
            <br>

            <div style="text-align: center; display: flex; justify-content: center;">
              <ol id="tracksList" style="margin: auto;">
                <button type="button" class="btn btn-secondary btn-sm" onclick="addfirst(event)">+</button>
                <% //create a list of all tracks. Tracks can be added and removed
                for (let i=0; i<season.tracks.length; i++){ %>
                <li style="margin: auto;">
                  <p style="text-align: left; margin: auto;"><%= season.tracks[i] %></p>
                  <button type="button" class="btn btn-secondary btn-sm" onclick="addnext(event)">+</button>
                  <button type="button" class="btn btn-secondary btn-sm" onclick="removecurrent(event)">-</button>
                </li>
                <% } %>
              </ol>
            </div>
          </div>
        </div>
      </div>

      <br>
      <button type="button" class="btn btn-primary" onclick="finish()">Save</button>
      <br><br><br><br><br><br><br>


      <script>
        // add data from the database to the JavaScript code
        let prevResults = JSON.parse('<%- JSON.stringify(season.results) %>');

        // adds a new track at the next position in the list
        function addnext(e) {
          let input = prompt("Enter the name of the next track");
          if (input != null) {
            let li = document.createElement("li");
            li.innerHTML = `<p style="text-align: left; margin: auto;">${input}</p>` + " <button type='button' class='btn btn-secondary btn-sm' onclick='addnext(event)'>+</button> <button type='button' class='btn btn-secondary btn-sm' onclick='removecurrent(event)'>-</button>";
            insertAfter(li, e.srcElement.parentElement);
          }
        }

        // adds a new track at the first position in the list
        function addfirst(e) {
          let input = prompt("Enter the name of the next track");
          if (input != null) {
            let li = document.createElement("li");
            li.innerHTML = `<p style="text-align: left; margin: auto;">${input}</p>` + " <button type='button' class='btn btn-secondary btn-sm' onclick='addnext(event)'>+</button> <button type='button' class='btn btn-secondary btn-sm' onclick='removecurrent(event)'>-</button>";
            insertAfter(li, e.srcElement);
          }
        }

        // removes the current track from the list
        function removecurrent(e) {
          console.log(e.srcElement.parentElement);
          e.srcElement.parentElement.remove();
        }

        // inserts a new driver at the next position in the list
        function addNewDriver() {
          let driverCount = parseInt('<%= season.driverTeams.length %>');
          console.log(driverCount);
          let newDriver = document.createElement("div");
          newDriver.id = "driverdiv" + driverCount;
          newDriver.innerHTML = "<label for='driver" + driverCount + "'>Driver " + (driverCount + 1) + ":</label> <input type='text' id='driver" + driverCount + "' name='driver" + driverCount + "'> <input type='text' id='teamDriver" + driverCount + "' name='teamDriver" + driverCount + "'> <input type='color' id='colorTeamDriver" + driverCount + "' name='colorTeamDriver" + driverCount + "'> <br><br>";
          document.getElementById("drivers").appendChild(newDriver);
        }

        // inserts a new DOM-Node after the given element
        function insertAfter(newNode, referenceNode) {
          referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
        }

        function finish() {
          //get all drivers
          let driverTeams = [];
          let drivers = document.getElementById('drivers');
          let driverDivs = drivers.getElementsByTagName('div');

          // build new driverTeams array of the input values and push it to the driverTeams array
          for (let i = 0; i < driverDivs.length; i++) {
            let driver = document.getElementById('driver' + i).value;
            let team = document.getElementById('teamDriver' + i).value;
            let color = document.getElementById('colorTeamDriver' + i).value;
            let driverTeam = {
              driver: driver,
              team: team,
              color: color
            };
            driverTeams.push(driverTeam);
          }
          let trackNames = [];
          let tracks = document.getElementById('tracksList');
          tracks = tracks.getElementsByTagName('li');
          // build new trackNames array from the list of tracks
          for (let i = 0; i < tracks.length; i++) {
            let track = tracks[i].getElementsByTagName('p')[0].innerHTML;
            trackNames.push(track);
          }

          //build new results
          //if results are empty, create new results array entry else
          //add the previously saved results to the new results array
          let newResults = {};
          trackNames.forEach(track => {
            if (!prevResults[track]) {
              newResults[track] = {
                event: track,
                raceResult: [],
                qualiResult: [],
                penalties: [],
                fastestLap: "",
                dnf: [],
                heldAt: ""
              };
            } else {
              newResults[track] = prevResults[track];
            }
          })

          //create the new structure of the season with all the new data
          let newSeasonDoc = {
            seasonNr: '<%= season.seasonNr %>',
            year: '<%= season.year %>',
            driverTeams: driverTeams,
            tracks: trackNames,
            results: newResults,
            createdAt: '<%= season.createdAt %>',
            updatedAt: new Date()
          };

          //handle user confirmation of the input data
          if (confirm("Are you sure you want to save these changes?")) {
            let path = window.location.pathname;
            fetch(path, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(newSeasonDoc)
            }).then(res => {
              console.log(res);
              if (res.status == 200) {
                window.location.href = '/';
              } else {
                alert("Something went wrong. The Season probably doesn't exist.");
              }
            })

          } else {
            console.log("Not saving...");
          }
        }
      </script>
    </div>
    <div id="footer">
      <%- include('footer')%>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</body>

</html>