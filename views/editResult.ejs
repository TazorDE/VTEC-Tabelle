<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Result - <%= race %></title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/slate/bootstrap.min.css" integrity="sha384-8iuq0iaMHpnH2vSyvZMSIqQuUnQA7QM+f6srIdlgBrTSEyd//AWNMyEaSF2yPzNQ" crossorigin="anonymous">
</head>

<body class="text-center" style="text-align: center;">

  <h1>Edit Result - <%= season.year %> Season: <%= season.seasonNr %> - <%= race %></h1>
  <br>
  <div style="display: flex; justify-content: center; flex-direction: row;">

    <div style="margin-right: 2rem;">
      Date of the race:
      <input type="date" id="newRaceDate">
      <br>
      <br>
      Fastest Lap:
      <select id="fastestDriver">
        <%for(let i = 0; i<season.driverTeams.length; i++){%>
        <option value="<%= season.driverTeams[i].driver %>"><%= season.driverTeams[i].driver %></option>
        <% } %>
      </select>
      <div style="text-align:center">
        <br>
        <h3>Race Order</h3>
        <button type="button" class="btn btn-primary btn-sm" onclick="addRaceWinner()">+</button>
        <br>
        <div id="raceResultOrder" style="text-align: left;">
          <ol id="raceResultOrderList">
            <% season.results[race].raceResult.forEach((element, index, object) => { %>
            <li><%= element %> &emsp; <button type="button" class="btn btn-primary btn-sm" onclick="addDriver(event)">+</button><button type="button" class="btn btn-primary btn-sm" onclick="rmDriver(event)">-</button>&emsp;
              <button type="button" onclick="switchDNF(event)" <% if(season.results[race].dnf[index]){%>class="btn btn-danger btn-sm" <%}else{ %> class="btn btn-primary btn-sm" <% } %>>DNF</button>
            </li>
            <% }); %>
          </ol>
        </div>
      </div>
    </div>
    <div style="margin-right: 2rem;">
      <h3>Penalties</h3>
      <div id="penalties">
        <ol id="penaltiesList" style="text-align: left;">
          <% season.results[race].penalties.forEach(element => { %>
          <li><%= element.driver %> - <div style="display: inline;"><%= element.penalty %></div>s &emsp;
            <button type="button" class="btn btn-primary btn-sm" onclick="editPenalty(event)">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
              </svg>
            </button>
            <button type="button" class="btn btn-primary btn-sm" onclick="removePenalty(event)">-</button>
          </li>
          <% }); %>
        </ol>
        <button type="button" class="btn btn-primary btn-sm" onclick="addPenalty()">+</button>
      </div>
    </div>
    <div>
      <h3>Qualification Order</h3>
      <button type="button" class="btn btn-primary btn-sm" onclick="addNewPole()">+</button>
      <br>
      <div id="qualiOrder" style="text-align: left;">
        <ol id="qualiOrderList">
          <% season.results[race].qualiResult.forEach(element => { %>
          <li><%= element %> &emsp; <button type="button" class="btn btn-primary btn-sm" onclick="addQualifier(event)">+</button><button type="button" class="btn btn-primary btn-sm" onclick="removeQualifier(event)">-</button></li>
          <% }); %>
        </ol>
      </div>
    </div>
  </div>

  <button type="button" class="btn btn-info" onclick="update()">Update Result</button>
  <br><br><br>


  <%let drivers=[];
  for(let i=0; i<season.driverTeams.length; i++){
      drivers.push(season.driverTeams[i].driver);
  }
  %>

  <script>
    let racreResultList = document.getElementById("raceResultOrderList");
    let penaltiesList = document.getElementById("penaltiesList");
    let qualiList = document.getElementById("qualiOrderList");
    let date = document.getElementById("newRaceDate");
    date.value = "<%= season.results[race].heldAt %>";

    let seasonDrivers = JSON.parse('<%- JSON.stringify(drivers) %>');
    let raceResult = JSON.parse('<%- JSON.stringify(season.results[race].raceResult) %>');
    let dnfList = JSON.parse('<%- JSON.stringify(season.results[race].dnf) %>');
    let penalties = JSON.parse('<%- JSON.stringify(season.results[race].penalties) %>');
    let qualiResult = JSON.parse('<%- JSON.stringify(season.results[race].qualiResult) %>');

    function addDriver(e) {
      let name = window.prompt("Enter Driver Name:");
      if (seasonDrivers.includes(name)) {
        let li = document.createElement("li");
        li.innerHTML = name + " &emsp; <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"addDriver(event)\">+</button><button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"rmDriver(event)\">-</button>" +
          "&emsp; <button type=\"button\" onclick=\"switchDNF(event)\" class=\"btn btn-primary btn-sm\">DNF</button>";
        insertAfter(li, e.srcElement.parentElement)
        let list = Array.from(e.srcElement.parentElement.parentNode.children);
        let index = list.indexOf(e.srcElement.parentElement);
        raceResult.splice((index + 1), 0, name);
        dnfList.splice((index + 1), 0, false);
      } else {
        alert("Driver not found!");
      }
    }

    function rmDriver(e) {
      let list = Array.from(e.srcElement.parentElement.parentNode.children);
      let index = list.indexOf(e.srcElement.parentElement);
      raceResult.splice(index, 1);
      dnfList.splice(index, 1);
      e.srcElement.parentElement.remove();
    }

    function addRaceWinner() {
      let name = window.prompt("Enter Driver Name:");
      if (seasonDrivers.includes(name)) {
        let li = document.createElement("li");
        li.innerHTML = name + " &emsp; <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"addDriver(event)\">+</button><button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"rmDriver(event)\">-</button>" +
          "&emsp; <button type=\"button\" onclick=\"switchDNF(event)\" class=\"btn btn-primary btn-sm\">DNF</button>";
        racreResultList.insertBefore(li, racreResultList.firstChild);
        raceResult.unshift(name);
        dnfList.unshift(false);
      } else {
        alert("Wrong driver name!");
      }
    }

    function editPenalty(e) {
      let listElement;
      if (e.srcElement.parentElement.children[0].nodeName != 'DIV') {
        if (e.srcElement.parentElement.children[0].nodeName == 'svg') {
          listElement = e.srcElement.parentElement.parentElement;
        } else if (e.srcElement.parentElement.children[0].nodeName == 'path') {
          listElement = e.srcElement.parentElement.parentElement.parentElement;
        }
      } else {
        listElement = e.srcElement.parentElement;
      }
      let penaltySeconds = parseInt(listElement.children[0].innerText);
      let driver = listElement.innerText.replace(/\s-\s.+/gm, '');
      let newPenaltySeconds = window.prompt(`Current penalty: ${penaltySeconds}s\nEnter new penalty:`);
      if (newPenaltySeconds != null && parseInt(newPenaltySeconds)) {
        listElement.children[0].innerText = newPenaltySeconds;
        penalties.forEach(element => {
          if (element.driver == driver) {
            element.penalty = newPenaltySeconds;
          }
        });
      } else {
        alert("Penalty must be a number and not empty!");
      }
    }

    function addPenalty() {
      let newPenaltyDriver = window.prompt("Enter Driver Name:");
      if (seasonDrivers.includes(newPenaltyDriver)) {
        let newPenalty = window.prompt("Enter Penalty:");
        if (newPenalty != null && parseInt(newPenalty)) {
          console.log(newPenalty);
          console.log(newPenaltyDriver);
          let li = document.createElement("li");
          li.innerHTML = newPenaltyDriver +
            " - <div style=\"display: inline;\">" + newPenalty + "s </div>" +
            " &emsp; <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"editPenalty(event)\">" +
            "<svg xmlns=\"http: //www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\"><path d = \"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" / ></svg>" +
            "</button><button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"removePenalty(event)\">-</button>";
          penaltiesList.appendChild(li);
          penalties.push({
            driver: newPenaltyDriver,
            penalty: newPenalty
          });
        } else {
          alert("Penalty must be a number and not empty!");
        }
      } else {
        alert("Driver not found!");
      }
    }

    function removePenalty(e) {
      console.log(e.srcElement.parentElement);
      let driver = e.srcElement.parentElement.innerText.replace(/\s-\s.+/gm, '');
      //remove driver from penalties
      penalties.forEach(element => {
        if (element.driver == driver) {
          penalties.splice(penalties.indexOf(element), 1);
        }
      });
      e.srcElement.parentElement.remove();
    }

    function addNewPole() {
      let newPoleDriver = window.prompt("Enter Driver Name:");
      if (seasonDrivers.includes(newPoleDriver)) {
        qualiResult.unshift(newPoleDriver);
        let li = document.createElement("li");
        li.innerHTML = newPoleDriver + " &emsp; <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"addQualifier(event)\">+</button><button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"removeQualifier(event)\">-</button>";
        qualiList.insertBefore(li, qualiList.firstChild);
      } else {
        alert("Driver not found!");
      }
    }

    function addQualifier(e) {
      let name = window.prompt("Enter Driver Name:");
      if (seasonDrivers.includes(name)) {
        let li = document.createElement("li");
        li.innerHTML = name + " &emsp; <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"addQualifier(event)\">+</button><button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"removeQualifier(event)\">-</button>";
        insertAfter(li, e.srcElement.parentElement);
        //add driver to qualiResult at correct position
        let list = Array.from(e.srcElement.parentElement.parentNode.children);
        let index = list.indexOf(e.srcElement.parentElement);
        qualiResult.splice((index + 1), 0, name);
      } else {
        alert("Wrong driver name!");
      }
    }

    function removeQualifier(e) {
      let list = Array.from(e.srcElement.parentElement.parentNode.children);
      let index = list.indexOf(e.srcElement.parentElement);
      list[index].remove();
      qualiResult.splice(index, 1);
    }

    function switchDNF(e) {
      //console.log(e.srcElement.classList);
      let list = Array.from(e.srcElement.parentElement.parentNode.children);
      let index = list.indexOf(e.srcElement.parentElement);
      dnfList[index] = !dnfList[index];

      if (e.srcElement.classList.contains("btn-danger")) {
        e.srcElement.classList.remove("btn-danger");
        e.srcElement.classList.add("btn-primary");
        e.srcElement.innerText = "DNF";
      } else {
        e.srcElement.classList.remove("btn-primary");
        e.srcElement.classList.add("btn-danger");
        e.srcElement.innerText = "DNF";
      }
    }

    function update() {

      // check if raceResults contains duplicate drivers
      if (new Set(raceResult).size !== raceResult.length) {
        alert("Please check the race result for duplicate drivers");
        return;
      }
      if (dnfList.length != raceResult.length) {
        alert("Something went wrong with the DNFs. Please contact the developer!");
        return;
      }
      let newResult = {
        event: '<%= race %>',
        raceResult: raceResult,
        qualiResult: qualiResult,
        penalties: penalties,
        fastestLap: document.getElementById('fastestDriver').value,
        dnf: dnfList,
        heldAt: date.value
      };
      if (confirm("Are you sure you want to update the result?")) {
        let target = window.location.pathname;
        fetch(target, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(newResult)
        }).then(function(response) {
          if (response.ok) {
            alert("Result updated!");
            window.location.href = '/';
          } else {
            alert("Something went wrong. Are you sure this season exists?");
          }
        });
      }
    }

    function insertAfter(newNode, referenceNode) {
      referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
    }
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</body>

</html>